# Copyright 2012 United States Government, as represented by the Secretary of Defense, Under
# Secretary of Defense (Personnel & Readiness).
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.

---
extends: appscene.vwf
properties:
  ambientColor: [ 183, 183, 183 ]
  tilePosition1: [  16.5, -33, 0 ]
  tilePosition2: [   5.5, -33, 0 ]
  tilePosition3: [  -5.5, -33, 0 ]
  tilePosition4: [ -16.5, -33, 0 ]
  tilePosition5: [  16.5, -22, 0 ]
  tilePosition6: [   5.5, -22, 0 ]
  tilePosition7: [  -5.5, -22, 0 ]
  tilePosition8: [ -16.5, -22, 0 ]
  tilePosition9: [  16.5, -11, 0 ]
  tilePosition10: [  5.5, -11, 0 ]
  tilePosition11: [  -5.5, -11, 0 ]
  tilePosition12: [ -16.5, -11, 0 ]
  tilePosition13: [  16.5,   0, 0 ]
  tilePosition14: [   5.5,   0, 0 ]
  tilePosition15: [  -5.5,   0, 0 ]
  tilePosition16: [ -16.5,   0, 0 ]
  numberOfMines: 3
  gameInProgress: false
  tileMap: []
methods:
  initializeCamera:
  startGame:
  setupGame:
children: 
  tileGroup1:
    extends: http://vwf.example.com/node3.vwf
    properties:
      isMine: false
      isFlipped: false
      position: 0
    scripts:
    - |
        this.pointerClick = function() {
          this.parent.flipTile(this);        	
        }
    children:
      blankTile1: 
        extends: http://vwf.example.com/node3.vwf
        source: models/tile.dae
        type: model/vnd.collada+xml
        properties: 
          translation: [ 0, 0, 0 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 4.8, 4, 4.8 ]
        children: 
          Cube: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "lightblue"  
  tileGroup2:
    extends: http://vwf.example.com/node3.vwf
    properties:
      isMine: false
      isFlipped: false
      position: 1
    scripts:
    - |
        this.pointerClick = function() {
          this.parent.flipTile(this);        	
        }
    children:
      blankTile2: 
        extends: http://vwf.example.com/node3.vwf
        source: models/tile.dae
        type: model/vnd.collada+xml
        properties: 
          translation: [ 0, 0, 0 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 4.8, 4, 4.8 ]
        children: 
          Cube: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "lightblue"  
  tileGroup3:
    extends: http://vwf.example.com/node3.vwf
    properties:
      isMine: false
      isFlipped: false
      position: 2
    scripts:
    - |
        this.pointerClick = function() {
          this.parent.flipTile(this);        	
        }
    children:
      blankTile3: 
        extends: http://vwf.example.com/node3.vwf
        source: models/tile.dae
        type: model/vnd.collada+xml
        properties: 
          translation: [ 0, 0, 0 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 4.8, 4, 4.8 ]
        children: 
          Cube: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "lightblue"  
  tileGroup4:
    extends: http://vwf.example.com/node3.vwf
    properties:
      isMine: false
      isFlipped: false
      position: 3
    scripts:
    - |
        this.pointerClick = function() {
          this.parent.flipTile(this);        	
        }
    children:
      blankTile4: 
        extends: http://vwf.example.com/node3.vwf
        source: models/tile.dae
        type: model/vnd.collada+xml
        properties: 
          translation: [ 0, 0, 0 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 4.8, 4, 4.8 ]
        children: 
          Cube: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "lightblue"  
  tileGroup5:
    extends: http://vwf.example.com/node3.vwf
    properties:
      isMine: false
      isFlipped: false
      position: 4
    scripts:
    - |
        this.pointerClick = function() {
          this.parent.flipTile(this);        	
        }
    children:
      blankTile5: 
        extends: http://vwf.example.com/node3.vwf
        source: models/tile.dae
        type: model/vnd.collada+xml
        properties: 
          translation: [ 0, 0, 0 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 4.8, 4, 4.8 ]
        children: 
          Cube: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "lightblue"  
  tileGroup6:
    extends: http://vwf.example.com/node3.vwf
    properties:
      isMine: false
      isFlipped: false
      position: 5
    scripts:
    - |
        this.pointerClick = function() {
          this.parent.flipTile(this);        	
        }
    children:
      blankTile6: 
        extends: http://vwf.example.com/node3.vwf
        source: models/tile.dae
        type: model/vnd.collada+xml
        properties: 
          translation: [ 0, 0, 0 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 4.8, 4, 4.8 ]
        children: 
          Cube: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "lightblue"  
  tileGroup7:
    extends: http://vwf.example.com/node3.vwf
    properties:
      isMine: false
      isFlipped: false
      position: 6
    scripts:
    - |
        this.pointerClick = function() {
          this.parent.flipTile(this);        	
        }
    children:
      blankTile7: 
        extends: http://vwf.example.com/node3.vwf
        source: models/tile.dae
        type: model/vnd.collada+xml
        properties: 
          translation: [ 0, 0, 0 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 4.8, 4, 4.8 ]
        children: 
          Cube: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "lightblue"  
  tileGroup8:
    extends: http://vwf.example.com/node3.vwf
    properties:
      isMine: false
      isFlipped: false
      position: 7
    scripts:
    - |
        this.pointerClick = function() {
          this.parent.flipTile(this);        	
        }
    children:
      blankTile8: 
        extends: http://vwf.example.com/node3.vwf
        source: models/tile.dae
        type: model/vnd.collada+xml
        properties: 
          translation: [ 0, 0, 0 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 4.8, 4, 4.8 ]
        children: 
          Cube: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "lightblue"  
  tileGroup9:
    extends: http://vwf.example.com/node3.vwf
    properties:
      isMine: false
      isFlipped: false
      position: 8
    scripts:
    - |
        this.pointerClick = function() {
          this.parent.flipTile(this);        	
        }
    children:
      blankTile9: 
        extends: http://vwf.example.com/node3.vwf
        source: models/tile.dae
        type: model/vnd.collada+xml
        properties: 
          translation: [ 0, 0, 0 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 4.8, 4, 4.8 ] 
        children: 
          Cube: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "lightblue"  
  tileGroup10:
    extends: http://vwf.example.com/node3.vwf
    properties:
      isMine: false
      isFlipped: false
      position: 9
    scripts:
    - |
        this.pointerClick = function() {
          this.parent.flipTile(this);        	
        }
    children:
      blankTile10: 
        extends: http://vwf.example.com/node3.vwf
        source: models/tile.dae
        type: model/vnd.collada+xml
        properties: 
          translation: [ 0, 0, 0 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 4.8, 4, 4.8 ]
        children: 
          Cube: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "lightblue"  
  tileGroup11:
    extends: http://vwf.example.com/node3.vwf
    properties:
      isMine: false
      isFlipped: false
      position: 10
    scripts:
    - |
        this.pointerClick = function() {
          this.parent.flipTile(this);        	
        }
    children:
      blankTile11: 
        extends: http://vwf.example.com/node3.vwf
        source: models/tile.dae
        type: model/vnd.collada+xml
        properties: 
          translation: [ 0, 0, 0 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 4.8, 4, 4.8 ]
        children: 
          Cube: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "lightblue"  
  tileGroup12:
    extends: http://vwf.example.com/node3.vwf
    properties:
      isMine: false
      isFlipped: false
      position: 11
    scripts:
    - |
        this.pointerClick = function() {
          this.parent.flipTile(this);        	
        }
    children:
      blankTile12: 
        extends: http://vwf.example.com/node3.vwf
        source: models/tile.dae
        type: model/vnd.collada+xml
        properties: 
          translation: [ 0, 0, 0 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 4.8, 4, 4.8 ]
        children: 
          Cube: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "lightblue"  
  tileGroup13:
    extends: http://vwf.example.com/node3.vwf
    properties:
      isMine: false
      isFlipped: false
      position: 12
    scripts:
    - |
        this.pointerClick = function() {
          this.parent.flipTile(this);        	
        }
    children:
      blankTile13: 
        extends: http://vwf.example.com/node3.vwf
        source: models/tile.dae
        type: model/vnd.collada+xml
        properties: 
          translation: [ 0, 0, 0 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 4.8, 4, 4.8 ]
        children: 
          Cube: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "lightblue"  
  tileGroup14:
    extends: http://vwf.example.com/node3.vwf
    properties:
      isMine: false
      isFlipped: false
      position: 13
    scripts:
    - |
        this.pointerClick = function() {
          this.parent.flipTile(this);        	
        }
    children:
      blankTile14: 
        extends: http://vwf.example.com/node3.vwf
        source: models/tile.dae
        type: model/vnd.collada+xml
        properties: 
          translation: [ 0, 0, 0 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 4.8, 4, 4.8 ]
        children: 
          Cube: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "lightblue"  
  tileGroup15:
    extends: http://vwf.example.com/node3.vwf
    properties:
      isMine: false
      isFlipped: false
      position: 14
    scripts:
    - |
        this.pointerClick = function() {
          this.parent.flipTile(this);        	
        }
    children:
      blankTile15: 
        extends: http://vwf.example.com/node3.vwf
        source: models/tile.dae
        type: model/vnd.collada+xml
        properties: 
          translation: [ 0, 0, 0 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 4.8, 4, 4.8 ]
        children: 
          Cube: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "lightblue"              
  tileGroup16:
    extends: http://vwf.example.com/node3.vwf
    properties:
      isMine: false
      isFlipped: false
      position: 15
    scripts:
    - |
        this.pointerClick = function() {
          this.parent.flipTile(this);        	
        }
    children:
      blankTile16: 
        extends: http://vwf.example.com/node3.vwf
        source: models/tile.dae
        type: model/vnd.collada+xml
        properties: 
          translation: [ 0, 0, 0 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 4.8, 4, 4.8 ] 
        children: 
          Cube: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "lightblue"     
scripts:
- | 
    var materialDef = {
      extends: "http://vwf.example.com/material.vwf",
      properties: {
        color: "darkblue",
      }
    };
    var textDef = {
      extends: "http://vwf.example.com/node3.vwf",
      children: { "material": materialDef },
    };
    var tile0 = {
      extends: "http://vwf.example.com/node3.vwf",
      source: "models/zero.dae",
      type: "model/vnd.collada+xml",
      properties: {
        scale: [ 4.8, 4, 4.8 ]
      },
      children: { "Text": textDef, },
    };
    var tile1 = {
      extends: "http://vwf.example.com/node3.vwf",
      source: "models/one.dae",
      type: "model/vnd.collada+xml",
      properties: {
        scale: [ 4.8, 4, 4.8 ]
      },
      children: { "Text": textDef, },
    };
    var tile2 = {
      extends: "http://vwf.example.com/node3.vwf",
      source: "models/two.dae",
      type: "model/vnd.collada+xml",
      properties: {
        scale: [ 4.8, 4, 4.8 ]
      },
      children: { "Text_001": textDef, },
    };
    var tile3 = {
      extends: "http://vwf.example.com/node3.vwf",
      source: "models/three.dae",
      type: "model/vnd.collada+xml",
      properties: {
        scale: [ 4.8, 4, 4.8 ]
      },
      children: { "Text_002": textDef, },
    };

    materialDef = {
      extends: "http://vwf.example.com/material.vwf",
      properties: {
        color: "red",
      }
    };
    var sphereDef = {
      extends: "http://vwf.example.com/node3.vwf",
      children: { "material": materialDef },
    };

    var mineTile = {
      extends: "http://vwf.example.com/node3.vwf",
      source: "models/mine.dae",
      type: "model/vnd.collada+xml",
      properties: {
        scale: [5, 5, 5]
      },
      children: { "Sphere": sphereDef },
    }

    var tileList = [
      this.tileGroup1, this.tileGroup2, this.tileGroup3, this.tileGroup4,
      this.tileGroup5, this.tileGroup6, this.tileGroup7, this.tileGroup8, 
      this.tileGroup9, this.tileGroup10, this.tileGroup11, this.tileGroup12, 
      this.tileGroup13, this.tileGroup14, this.tileGroup15, this.tileGroup16
    ];

    this.initialize = function() {
      this.tileGroup1.translation = this.tilePosition1;
      this.tileGroup2.translation = this.tilePosition2;
      this.tileGroup3.translation = this.tilePosition3;
      this.tileGroup4.translation = this.tilePosition4;
      this.tileGroup5.translation = this.tilePosition5;
      this.tileGroup6.translation = this.tilePosition6;
      this.tileGroup7.translation = this.tilePosition7;
      this.tileGroup8.translation = this.tilePosition8;
      this.tileGroup9.translation = this.tilePosition9;
      this.tileGroup10.translation = this.tilePosition10;
      this.tileGroup11.translation = this.tilePosition11;
      this.tileGroup12.translation = this.tilePosition12;
      this.tileGroup13.translation = this.tilePosition13;
      this.tileGroup14.translation = this.tilePosition14;
      this.tileGroup15.translation = this.tilePosition15;
      this.tileGroup16.translation = this.tilePosition16;
      this.tileMap = [
        0, 1, 2, 3,
        4, 5, 6, 7,
        8, 9, 10, 11,
        12, 13, 14, 15
      ];
      this.future( 0 ).initializeCamera();
    }

    this.initializeCamera = function() {
      this.camera.transform = [ -1,      0,      0,     0,
                                 0,     -0.5,   -0.87,  0,
                                 0,     -0.87,   0.5,   0,
                                 0.089, 32.294, 69.995, 1 ];
      
      this.camera.touchmode = "none";
    }

    this.startGame = function() {
      this.shuffle();
      this.setupGame();
    }

    this.shuffle = function() {
      var tmp, current, top = this.tileMap.length;

      if(top) while(--top) {
        current = Math.floor(this.random() * (top + 1));
        tmp = this.tileMap[current];
        this.tileMap[current] = this.tileMap[top];
        this.tileMap[top] = tmp;
      }
    }
    
    this.setupGame = function() { 
      for(var i = 0; i < this.tileMap.length; i++) {
        var tile = tileList[this.tileMap[i]];
        if(i < this.numberOfMines) {
          tile.properties.isMine = true;
        }
        else {
          tile.properties.isMine = false;
        }
        tile.properties.isFlipped = false;
        
        // Delete old numbers
        var flipTile = tile['flippedTile' + this.tileMap[i]];
        if(flipTile) {
          tile.children.delete(flipTile);
        }
      }
      // Disable button
      top.$("#startButton").button("option", "disabled", true);
      top.$("#winMessage").dialog().dialog("close");
      top.$("#loseMessage").dialog().dialog("close");
      // Start game
      this.gameInProgress = true;
    }
    
    this.flipTile = function(obj) {
      if(!obj.isFlipped && this.gameInProgress) {
        if(obj.isMine) {
          var tempTile = $.extend(true, {}, mineTile);
          tempTile.properties.rotation = [1, 0, 0, 0];
          var name = "flippedTile" + obj.properties.position;
          obj.children.create(name, tempTile);
          this.gameInProgress = false;
          top.$("#loseMessage").dialog({
            resizable: false,
            draggable: false,
            height: 110,
            width: 230
          });
          top.$("#startButton").button("option", "disabled", false);
        }
        else {
          var tempTile = this.getNumberedTile(obj.properties.position);
          tempTile.properties.rotation = [0, 0, 1, 180];
          var name = "flippedTile" + obj.properties.position;
          obj.children.create(name, tempTile);
        }
        obj.isFlipped = true;
        this.checkForGameOver();
      }
    }
    
    this.getNumberedTile = function(position) {
      var mineCount = 0;
      var x = position % 4;
      var y = Math.floor(position / 4);
      if(this.isPositionMined(x - 1, y - 1)) 
        mineCount++;
      if(this.isPositionMined(x - 0, y - 1))
        mineCount++;
      if(this.isPositionMined(x + 1, y - 1))
        mineCount++;
      if(this.isPositionMined(x - 1, y - 0))
        mineCount++;
      if(this.isPositionMined(x + 1, y - 0))
        mineCount++;
      if(this.isPositionMined(x - 1, y + 1))
        mineCount++;
      if(this.isPositionMined(x - 0, y + 1))
        mineCount++;
      if(this.isPositionMined(x + 1, y + 1))
        mineCount++;
      switch(mineCount) {
        case 1:
          return $.extend(true, {}, tile1);
          break;
        case 2:
          return $.extend(true, {}, tile2);
          break;
        case 3:
          return $.extend(true, {}, tile3);
          break;
        default:
          return $.extend(true, {}, tile0);
      }
    }
    
    this.isPositionMined = function(x, y) {
      if(x >=0 && x < 4 && y >= 0 && y < 4) {
        var position = (4 * y) + x;
        for(var i = 0; i < this.tileMap.length; i++) {
          if(position == this.tileMap[i]) {
            var tile = tileList[this.tileMap[i]];
            if(tile && tile.isMine) {
              return true;
            }
          }
        }
      }
      return false;
    }
    
    this.checkForGameOver = function() {
      var unflippedEmptyTiles = false;
      for(var i = 0; i < this.tileMap.length; i++) {
        var tile = tileList[this.tileMap[i]];
        if(tile && !tile.isFlipped && !tile.isMine) {
          unflippedEmptyTiles = true;
        }
      }
      if(!unflippedEmptyTiles) {
        this.gameInProgress = false;
        top.$("#winMessage").dialog({
          resizable: false,
          draggable: false,
          height: 110,
          width: 230
        });
        top.$("#startButton").button("option", "disabled", false);
      }
    }
