# Copyright 2012 United States Government, as represented by the Secretary of Defense, Under
# Secretary of Defense (Personnel & Readiness).
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.

--- 
extends: http://vwf.example.com/navscene.vwf
type: model/x-glge
properties:
  ambientColor: [ 183, 183, 183 ]
  activeCamera: "http-vwf-example-com-camera-vwf-camera"
  navmode: none
  channelImages:
  backlightImages: 
  beepImages: 
  squelchImages: 
  encryptImages: 
  powerImages:  
scripts:
- text: |
    this.initialize = function() {
      this.activeCamera = "http-vwf-example-com-camera-vwf-camera";
      this.camera.transform = [ 0.8791424632072449,-0.4765590727329254,0,0,0.44338271021842957,0.8179396390914917,-0.36658763885498047,0,0.17470066249370575,0.3222827613353729,0.9303835034370422,0,-3.814249038696289,-7.036417007446289,3.153610944747925,1 ];
      this.camera.lookAt = "http-vwf-example-com-node3-vwf-sceneCenter";
      this.channelImages = ["images/LCD12_Chan1_Gon_Von.png", "images/LCD12_Chan2_Gon_Von.png", "images/LCD12_Chan3_Gon_Von.png",
          "images/LCD12_Chan4_Gon_Von.png", "images/LCD12_Chan5_Gon_Von.png", "images/LCD12_Chan6_Gon_Von.png",
          "images/LCD12_Chan7_Gon_Von.png", "images/LCD12_Chan8_Gon_Von.png", "images/LCD12_Chan9_Gon_Von.png",
          "images/LCD12_Chan10_Gon_Von.png", "images/LCD12_Chan11_Gon_Von.png", "images/LCD12_Chan12_Gon_Von.png",
          "images/LCD12_Chan13_Gon_Von.png", "images/LCD12_Chan14_Gon_Von.png", "images/LCD12_Chan15_Gon_Von.png",
          "images/LCD12_Chan16_Gon_Von.png"];
      this.backlightImages = ["images/LCD12_LIGT_AUTO_Gon_Von.png", "images/LCD12_LIGT_OFF_Gon_Von.png", "images/LCD12_LIGT_ON_Gon_Von.png"];
      this.beepImages = ["images/LCD12_BEEP_ON_Gon_Von.png", "images/LCD12_BEEP_OFF_Gon_Von.png"];
      this.squelchImages = ["images/LCD12_SQL20_Gon_Von.png", "images/LCD12_SQL30_Gon_Von.png", "images/LCD12_SQL40_Gon_Von.png",
          "images/LCD12_SQL50_Gon_Von.png", "images/LCD12_SQL60_Gon_Von.png", "images/LCD12_SQL70_Gon_Von.png", 
          "images/LCD12_SQL80_Gon_Von.png", "images/LCD12_SQL90_Gon_Von.png", "images/LCD12_SQL100_Gon_Von.png", 
          "images/LCD12_SQL110_Gon_Von.png"];
      this.encryptImages = ["images/LCD7_Scrambler_Gon_Von.png", "images/LCD7_Scrambler_Gon_Voff.png"];
      this.powerImages = ["images/LCD12_Blank_Gon_Voff.png", "images/LCD12_Low2_Gon_Von.png", "images/LCD12_Low1_Gon_Von.png"];
      this.preloadImages();
    }
    this.preloadImages = function() {
      var i;
      for(i = 0; i < this.channelImages.length; i++) {
        new Image().src = this.channelImages[i];
      }
      for(i = 0; i < this.beepImages.length; i++) {
        new Image().src = this.beepImages[i];
      }
      for(i = 0; i < this.squelchImages.length; i++) {
        new Image().src = this.squelchImages[i];
      }
      for(i = 0; i < this.encryptImages.length; i++) {
        new Image().src = this.encryptImages[i];
      }
      for(i = 0; i < this.powerImages.length; i++) {
        new Image().src = this.powerImages[i];
      }
    }
children:
  Omni01:
    extends: http://vwf.example.com/light.vwf
    properties:
      lightType: "point"
      constantAttenuation: 1
      translation: [ 0, -30, 8 ]
  dir2:
    extends: http://vwf.example.com/light.vwf
    properties:
      lightType: "directional"
      constantAttenuation: 1
      rotation: [ 0.707, 0.707, 0, 0 ]
  sceneCenter:
    extends: http://vwf.example.com/node3.vwf
  radio: 
    extends: http://vwf.example.com/node3.vwf
    source: Radio.DAE
    type: model/vnd.collada+xml
    properties:
      translation: [ 0, 0, 0 ]
      rotation: [ 1, 0, 0, -90 ]
      powerOn:
        set: |
          if ( this.powerOwn != Boolean( value ) ){
            this.powerOn = Boolean( value );
            if ( value ) {
              this.volume = 10;
              this.menuMode = "channel";
            } else {
              this.volume = 0;
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = "images/lcd.png";
            } 
          }
        value: false
      volume:
        set: |
          if ( value >= 0 && value <= 10 ){
            if ( this.volume == 0 && value != 0 ) {
              this.powerOn = true;
            } else if ( this.volume != 0 && value == 0 ) {
              this.powerOn = false;
            }
            this.volume = value;
          }
        value: 0
      speak: "up"
      channel:
        set: |
          if ( !this.powerOn ) return;
          switch( value ) {
            case 0:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.channelImages[0];
              this.channel = value;
              break;
            case 1:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.channelImages[1];
              this.channel = value;
              break;
            case 2:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.channelImages[2];
              this.channel = value;
              break;
            case 3:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.channelImages[3];
              this.channel = value;
              break;
            case 4:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.channelImages[4];
              this.channel = value;
              break;
            case 5:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.channelImages[5];
              this.channel = value;
              break;
            case 6:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.channelImages[6];
              this.channel = value;
              break;
            case 7:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.channelImages[7];
              this.channel = value;
              break;
            case 8:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.channelImages[8];
              this.channel = value;
              break;
            case 9:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.channelImages[9];
              this.channel = value;
              break;
            case 10:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.channelImages[10];
              this.channel = value;
              break;
            case 11:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.channelImages[11];
              this.channel = value;
              break;
            case 12:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.channelImages[12];
              this.channel = value;
              break;
            case 13:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.channelImages[13];
              this.channel = value;
              break;
            case 14:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.channelImages[14];
              this.channel = value;
              break;
            case 15:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.channelImages[15];
              this.channel = value;
              break;
          }
        value: 0
      headphones: false
      anteanna:
        set: |
          if ( value ) {
            this.bone1.MaxScene.Radio.playing = !value;
          } else {
            this.logger.debug( "replace the anteanna" );
          }
          this.anteanna = value;
        value: true
      battery: true
      batteryCover: true 
      beltClip: true
      menuMode:
        set: |
          if ( !this.powerOn ) return;
          switch( value ) {
            case "channel":
              this.channel = this.channel;
              this.menuMode = value;
              break;
            case "backLight":
              this.backLightMode = this.backLightMode;
              this.menuMode = value;
              break;
            case "squelch":
              this.squelch = this.squelch;
              this.menuMode = value;
              break;
            case "beep":
              this.beepOn = this.beepOn;
              this.menuMode = value;
              break;
          }
        value: "none"
      backLightMode:
        set: |
          if ( !this.powerOn ) return;
          switch(value) {
            case "auto":
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.backlightImages[0];
              this.backLightMode = value;
              break;
            case "off":
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.backlightImages[1];
              this.backLightMode = value;
              break;
            case "on":
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.backlightImages[2];
              this.backLightMode = value;
              break;
          }
        value: "auto"
      beepOn:
        set: |
          if ( !this.powerOn ) return;
          if ( value ) {
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.beepImages[0];
              this.beepOn = value;
          } else {
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.beepImages[1];
              this.beepOn = value;
          }
        value: true
      squelch:
        set: |
          if ( !this.powerOn ) return;
          switch(value) {
            case 20:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.squelchImages[0];
              this.squelch = value;
              break;
            case 30:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.squelchImages[1];
              this.squelch = value;
              break;
            case 40:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.squelchImages[2];
              this.squelch = value;
              break;
            case 50:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.squelchImages[3];
              this.squelch = value;
              break;
            case 60:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.squelchImages[4];
              this.squelch = value;
              break;
            case 70:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.squelchImages[5];
              this.squelch = value;
              break;
            case 80:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.squelchImages[6];
              this.squelch = value;
              break;
            case 90:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.squelchImages[7];
              this.squelch = value;
              break;
            case 100:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.squelchImages[8];
              this.squelch = value;
              break;
            case 110:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.squelchImages[9];
              this.squelch = value;
              break;
          }
        value: 20
      encryptionOn:
        set: |
          if ( !this.powerOn ) return;
          if ( value ) {
            this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.encryptImages[0];
              this.encryptionOn = value;
          } else { 
            this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.encryptImages[1];
              this.encryptionOn = value;
          } 
          this.encryptionOn = value;
        value: false
      transmitPower:
        set: |
          if ( !this.powerOn ) return;
          switch ( value ){
            case 4:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.powerImages[0];
              this.transmitPower = value;
              break;
            case 2:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.powerImages[1];
              this.transmitPower = value;
              break;
            case 1:
              this.bone1.MaxScene.Radio.LCD.glgeObj14.material.texture = this.parent.powerImages[2];
              this.transmitPower = value;
              break;
          }
        value: 4
      keysLocked: false
    scripts: 
    - |
        var radio = this;
        this.configSave = function(){
        }
        this.red = function() {
          if ( radio.keysLocked ) return;
          switch( radio.menuMode ) {
            case 'channel':
              radio.menuMode = 'backLight';
              break;
            case 'backLight':
              radio.menuMode = 'squelch';
              break;
            case 'squelch':
              radio.menuMode = "beep";
              break;
            case 'beep':
              radio.configSave();
              radio.menuMode = 'channel';
              break;
          }
        }
        this.up = function() {
          switch( radio.menuMode ) {
            case "backLight":
              if ( radio.backLightMode == "on" )
                radio.backLightMode = "auto";
              else if ( radio.backLightMode == "auto")
                radio.backLightMode = "off";
              else
                radio.backLightMode = "on";
              break;
            case "squelch":
              if ( radio.squelch <= 100 )
                radio.squelch = radio.squelch + 10;
              break;
            case "beep":
              radio.beepOn = !radio.beepOn;
              break;
          }
        }
        this.down = function() {
          switch( radio.menuMode ) {
            case "backLight":
              if ( radio.backLightMode == "on" )
                radio.backLightMode = "auto";
              else 
                radio.backLightMode = "on";
              break;
            case "squelch":
              if ( radio.squelch >= 30 )
                radio.squelch = radio.squelch - 10;
              break;
            case "beep":
              radio.beepOn = !radio.beepOn;
              break;
          }
        }
        this.p0 = function() {
          if ( radio.keysLocked ) return;
          switch( radio.menuMode ){
            case "channel":
              radio.encryptionOn = !radio.encryptionOn;
              break;
          }
        }
        this.p1 = function() {
          if ( radio.keysLocked ) return;
        }
        this.p2 = function() {
          if ( radio.keysLocked ) return;
          if ( radio.menuMode == "channel" ){
            if ( !radio.settingTransmitPower ){
              radio.settingTransmitPower = true;
            } else {
              switch ( radio.transmitPower ){
                case 4:
                  radio.transmitPower = 2;
                  break;
                case 2:
                  radio.transmitPower = 1;
                  break;
                case 1:
                  radio.transmitPower = 4;
                  break;
              }
            }
          }
        }
        this.p3 = function() {
          radio.keysLocked = !radio.keysLocked;
        }
        this.ptt = function() {
          if ( radio.keysLocked ) return;
        }
    children:
      bone1:
        extends: http://vwf.example.com/node3.vwf
        children:
          MaxScene:
            extends: http://vwf.example.com/node3.vwf
            children:
              EnvironmentAmbientLight:
                extends: http://vwf.example.com/node3.vwf
              Radio:
                extends: http://vwf.example.com/node3.vwf
                properties: 
                  playing: false
                  looping: false
                  speed: 1
                children:
                  ic40_MicrophonePort:
                    extends: http://vwf.example.com/node3.vwf
                    children:
                      bone6:
                        extends: http://vwf.example.com/node3.vwf
                        children:
                          glgeObj1:
                            extends: http://vwf.example.com/mesh.vwf
                  ic40_SpeakerPort:
                    extends: http://vwf.example.com/node3.vwf
                    children:
                      bone8:
                        extends: http://vwf.example.com/node3.vwf
                        children:
                          glgeObj2:
                            extends: http://vwf.example.com/mesh.vwf
                  ic40Channel:
                    extends: http://vwf.example.com/node3.vwf
                    implements:
                    - http://vwf.example.com/control.vwf
                    properties: 
                      controlType: rotate
                      controlMode: continuous
                      transformIncrement: -18
                      transformAxis: [0, 0, 1]
                      maxValue: 15
                      dragSpeed: 20
                    scripts:
                    - |
                        this.pointerUp = function( pointerInfo, pickInfo ) {
                          this.parent.parent.parent.parent.channel = this.controlValue;
                        }
                        this.pointerMove = function( pointerInfo, pickInfo ) {
                          this.parent.parent.parent.parent.channel = this.controlValue;
                        }
                  ic40Down:
                    extends: http://vwf.example.com/node3.vwf
                    implements:
                    - http://vwf.example.com/control.vwf
                    properties:
                      controlType: translate
                      controlMode: momentary
                      transformAxis: [ 0.03, 0, 0 ]
                    scripts:
                    - |
                        this.pointerUp = function() {
                          this.parent.parent.parent.parent.down();
                        }
                  ic40Monitor:
                    extends: http://vwf.example.com/node3.vwf
                    children:
                      glgeObj5:
                        extends: http://vwf.example.com/mesh.vwf
                  ic40P0:
                    extends: http://vwf.example.com/node3.vwf
                    implements:
                    - http://vwf.example.com/control.vwf
                    properties:
                      controlType: translate
                      controlMode: momentary
                      transformAxis: [ 0, 0.03, 0 ]
                    scripts:
                    - |
                        this.pointerUp = function() {
                          this.parent.parent.parent.parent.p0();
                        }                
                  ic40P1:
                    extends: http://vwf.example.com/node3.vwf
                    implements:
                    - http://vwf.example.com/control.vwf
                    properties:
                      controlType: translate
                      controlMode: momentary
                      transformAxis: [ 0, 0.03, 0 ]
                    scripts:
                    - |
                        this.pointerUp = function() {
                          this.parent.parent.parent.parent.p1();
                        }                  
                  ic40P2:
                    extends: http://vwf.example.com/node3.vwf
                    implements:
                    - http://vwf.example.com/control.vwf
                    properties:
                      controlType: translate
                      controlMode: momentary
                      transformAxis: [ 0, 0.03, 0 ]
                    scripts:
                    - |
                        this.pointerUp = function() {
                          this.parent.parent.parent.parent.p2();
                        }                  
                  ic40P3:
                    extends: http://vwf.example.com/node3.vwf
                    implements:
                    - http://vwf.example.com/control.vwf
                    properties:
                      controlType: translate
                      controlMode: momentary
                      transformAxis: [ 0, 0.03, 0 ]
                    scripts:
                    - |
                        this.pointerUp = function() {
                          this.parent.parent.parent.parent.p3();
                        }                  
                  ic40PTT:
                    extends: http://vwf.example.com/node3.vwf
                    implements:
                    - http://vwf.example.com/control.vwf
                    properties:
                      controlType: translate
                      controlMode: momentary
                      transformAxis: [ 0.04, 0, 0 ]
                    scripts:
                    - |
                        this.pointerUp = function() {
                          this.parent.parent.parent.parent.ptt();
                        }                  
                  ic40Red:
                    extends: http://vwf.example.com/node3.vwf
                    implements:
                    - http://vwf.example.com/control.vwf
                    properties:
                      controlType: translate
                      controlMode: momentary
                      transformAxis: [ 0, 0, -0.02 ]
                    scripts:
                    - |
                        this.pointerUp = function() {
                          this.parent.parent.parent.parent.red();
                        }                 
                  ic40Up:
                    extends: http://vwf.example.com/node3.vwf
                    implements:
                    - http://vwf.example.com/control.vwf
                    properties:
                      controlType: translate
                      controlMode: momentary
                      transformAxis: [ 0.04, 0, 0 ]
                    scripts:
                    - |
                        this.pointerUp = function() {
                          this.parent.parent.parent.parent.up();
                        }
                  ic40Volume:
                    extends: http://vwf.example.com/node3.vwf
                    implements:
                    - http://vwf.example.com/control.vwf
                    properties:
                      rotation: [0, 0, 1, 0]
                      controlType: rotate
                      controlMode: positions
                      transformIncrement: 12
                      transformAxis: [0, 0, 1]
                    scripts:  
                    - | 
                        this.pointerUp = function()  {
                          if ( this.parent.parent.parent.parent.volume == 0 ) {
                            this.parent.parent.parent.parent.volume = 1;
                          } else {
                            this.parent.parent.parent.parent.volume = 0;
                          }                            
                        }
                  LCD:
                    extends: http://vwf.example.com/node3.vwf
                    children:
                      glgeObj14:
                        extends: http://vwf.example.com/mesh.vwf
                        children:
                          material:
                            extends: http://vwf.example.com/material.vwf
                            properties:
                              texture: 
                  LCD_Back:
                    extends: http://vwf.example.com/node3.vwf
                    children:
                      glgeObj15:
                        extends: http://vwf.example.com/mesh.vwf
                  BeltClip_1:
                    extends: http://vwf.example.com/node3.vwf
                    properties: 
                      playing: false
                      looping: false
                      speed: 1
                    scripts:
                    - |
                        this.pointerUp = function() {
                          this.playing = !this.playing 
                        }               
                    children:
                      BeltClip:
                        extends: http://vwf.example.com/node3.vwf
                        children:
                          bone25:
                            extends: http://vwf.example.com/node3.vwf
                            children:
                              glgeObj16:
                                extends: http://vwf.example.com/mesh.vwf
                      BeltClipBase:
                        extends: http://vwf.example.com/node3.vwf
                        children:
                          bone27:
                            extends: http://vwf.example.com/node3.vwf
                            children:
                              glgeObj17:
                                extends: http://vwf.example.com/mesh.vwf
                      BeltClip_Latch:
                        extends: http://vwf.example.com/node3.vwf
                        properties: 
                          playing: false
                          looping: false
                          speed: 1
                        scripts:
                        - |
                            this.pointerUp = function() {
                              this.playing = !this.playing 
                            }                      
                        children:
                          BeltClipTab:
                            extends: http://vwf.example.com/node3.vwf
                            children:
                              bone30:
                                extends: http://vwf.example.com/node3.vwf
                                children:
                                  glgeObj18:
                                    extends: http://vwf.example.com/mesh.vwf
                  Battery:
                    extends: http://vwf.example.com/node3.vwf
                    properties: 
                      playing: false
                      looping: false
                      speed: 1
                    scripts:
                    - |
                        this.pointerUp = function() {
                          this.playing = !this.playing 
                        }                 
                    children:
                      ic40Battery:
                        extends: http://vwf.example.com/node3.vwf
                        children:
                          bone33:
                            extends: http://vwf.example.com/node3.vwf
                            children:
                              glgeObj19:
                                extends: http://vwf.example.com/mesh.vwf
                  BatteryLatch:
                    extends: http://vwf.example.com/node3.vwf
                    properties: 
                      playing: false
                      looping: false
                      speed: 1
                    scripts:
                    - |
                        this.pointerUp = function() {
                          this.playing = !this.playing 
                        }                    
                    children:
                      ic40BatteryLatch:
                        extends: http://vwf.example.com/node3.vwf
                        children:
                          glgeObj20:
                            extends: http://vwf.example.com/mesh.vwf
                  ic40Radio:
                    extends: http://vwf.example.com/node3.vwf
                    children:
                      bone37:
                        extends: http://vwf.example.com/node3.vwf
                        children:
                          glgeObj21:
                            extends: http://vwf.example.com/mesh.vwf
              ic40Antennae:
                extends: http://vwf.example.com/node3.vwf
                scripts:
                - |
                    this.ic40Antennae = function() {
                      this.parent.parent.parent.parent.anteanna = !this.parent.parent.parent.parent.anteanna; 
                    } 

