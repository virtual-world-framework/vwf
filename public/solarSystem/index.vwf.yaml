# Copyright 2012 United States Government, as represented by the Secretary of Defense, Under
# Secretary of Defense (Personnel & Readiness).
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.

--- 
extends: http://vwf.example.com/scene.vwf
properties:
  backgroundColor: [ 0, 0, 0 ]
  usersShareView: false
  userObject:
    extends: http://vwf.example.com/node3.vwf
    implements: [ "http://vwf.example.com/navigable.vwf" ]
    properties:
      translationSpeed: 160
      navmode: "fly"
      transform: [ 0, 1, 0, 0, -1, 0, 0, 0, 0, 0, 1, 0, 0, 200, 0, 1 ]
    children:   
      camera:
        extends: http://vwf.example.com/camera.vwf
        properties:
          transform: [ 0, 1, 0, 0, -1, 0, 0, 0, 0, 0, 1, 0, 605, 0, 0, 1 ]
          far: 13000
          near: 4
children:
  sun:
    extends: http://vwf.example.com/node3.vwf
    properties:
      rotation: [ 1, 0, 0, 90 ]  
    children:
      light:
        extends: http://vwf.example.com/pointlight.vwf
        properties:
          intensity: 1.4
          distance: 10000
          position: [ 0, 0, 0 ]
      planet:
        extends: http://vwf.example.com/threejs/sphere.vwf
        properties:
          meshDefinition: 
            radius: 100
            segmentsWidth: 64
            segmentsHeight: 64
          translation: [ 0, 0, 0 ]
        children:
          material:
            extends: sunshader.vwf
            properties:
              texture1Src: "images/cloud.png"
              texture2Src: "images/lavatile.jpg"
              deltaTime: 0
            methods:
              updateTime:
                parameters:
                  - timeElasped
                body: |
                  this.deltaTime = this.deltaTime + timeElasped;
                  this.future( 0.1 ).updateTime( 0.1 );
            scripts:
            - |
                this.initialize = function() {
                  this.future( 0 ).updateTime( 0.001 );
                } 
  mercury:
    extends: http://vwf.example.com/node3.vwf
    properties:
      rotation: [ 1, 0, 0, 90 ]
    children:
      planet:
        extends: http://vwf.example.com/threejs/sphere.vwf
        properties:
          meshDefinition: 
            radius: 0.393
            segmentsWidth: 32
            segmentsHeight: 32
          translation: [ 120, 0, 0 ] 
          scale: [ 5.5, 5.5, 5.5 ] 
        children:
          material:
            extends: http://vwf.example.com/material.vwf
            properties:
              color: [ 255, 255, 255 ]
              texture: "images/Mercury.jpg"
    methods:
      spin: |
        this.rotateBy( [ 0, 0, 1, ( 1 / 0.24 ), 0 ] );
        this.future( 0.05 ).spin();
    scripts:
    - |
        this.initialize = function() {
          this.future( 0.05 ).spin();
        } 
  venus:
    extends: http://vwf.example.com/node3.vwf
    properties:
      rotation: [ 1, 0, 0, 90 ]
    children:
      planet:
        extends: http://vwf.example.com/threejs/sphere.vwf
        properties:
          meshDefinition: 
            radius: 0.9523
            segmentsWidth: 32
            segmentsHeight: 32
          translation: [ 135, 0, 0 ]  
          scale: [ 5.5, 5.5, 5.5 ]
        children:
          material:
            extends: http://vwf.example.com/material.vwf
            properties:
              color: [ 255, 255, 255 ]
              texture: "images/venus.jpg"
    methods:
      spin: |
        this.rotateBy( [ 0, 0, 1, ( 1 / 0.62 ), 0 ] );
        this.future( 0.05 ).spin();
    scripts:
    - |
        this.initialize = function() {
          this.future( 0.05 ).spin();
        }   
  earth:
    extends: http://vwf.example.com/node3.vwf
    properties:
      rotation: [ 1, 0, 0, 90 ]
    children:
      atmosphere:
        extends: http://vwf.example.com/node3.vwf
        properties:
          translation: [ 150, 0, 0 ]
          scale: [ 5.5, 5.5, 5.5 ]
          spinRate: 0.4
        children:
          planet:
            extends: http://vwf.example.com/threejs/sphere.vwf
            properties:
              meshDefinition: 
                radius: 1
                segmentsWidth: 32
                segmentsHeight: 32
              translation: [ 0, 0, 0 ]
            children:
              material:
                extends: http://vwf.example.com/shaderMaterial.vwf
                type: shader/definition
                properties:
                  shaderDefinition:
                    type: normalmap
                    uniforms:
                      tNormal: { type: 't', pValue: 'images/earth_normal_2048.jpg' }
                      tDiffuse: { type: 't', pValue: 'images/earth_surface_2048.jpg' }
                      tSpecular: { type: 't', pValue: 'images/earth_specular_2048.jpg' }
                      enableSpecular: { type: 'i', pValue: true }
                      enableDiffuse: { type: 'i', pValue: true }
                    lights: true            

                # working
                # type: normalmap
                # children:
                #   shaderUniforms:
                #     extends: http://vwf.example.com/threejs/uniforms.vwf
                #     properties:
                #       tNormal: { type: 't', pValue: 'images/earth_normal_2048.jpg' }
                #       tDiffuse: { type: 't', pValue: 'images/earth_surface_2048.jpg' }
                #       tSpecular: { type: 't', pValue: 'images/earth_specular_2048.jpg' }
                #       enableSpecular: { type: 'i', pValue: true }
                #       enableDiffuse: { type: 'i', pValue: true }  
                # working
            methods:
              spin: |
                this.rotateBy( [ 0, 1, 0, 1, 0 ] );          
                this.future( 0.05 ).spin();
            scripts:
            - |
                this.initialize = function() {
                  this.future( 0 ).spin();
                } 
                                
          clouds:
            extends: http://vwf.example.com/threejs/sphere.vwf
            properties:
              meshDefinition: 
                radius: 1.005
                segmentsWidth: 32
                segmentsHeight: 32
            children:
              material:
                extends: http://vwf.example.com/material.vwf
                type: MeshLambertMaterial
                properties:
                  color: [ 255, 255, 255 ]
                  texture: "images/earth_clouds_1024.png"
                  transparent: true
            methods:
              spin: |
                this.rotateBy( [ 0, 1, 0, 0.95, 0 ] );          
                this.future( 0.05 ).spin();
            scripts:
            - |
                this.initialize = function() {
                  this.future( 0 ).spin();
                } 
    methods:
      spin: |
        this.rotateBy( [ 0, 0, 1, 1, 0 ] );
        this.future( 0.05 ).spin();
    scripts:
    - |
        this.initialize = function() {
          this.future( 0 ).spin();
        } 
  mars:
    extends: http://vwf.example.com/node3.vwf
    properties:
      rotation: [ 1, 0, 0, 90 ]
    children:
      planet:
        extends: http://vwf.example.com/threejs/sphere.vwf
        properties:
          meshDefinition: 
            radius: 0.5319
            segmentsWidth: 32
            segmentsHeight: 32
          translation: [ 180, 0, 0 ]  
          scale: [ 5.5, 5.5, 5.5 ]
        children:
          material:
            extends: http://vwf.example.com/material.vwf
            properties:
              color: [ 255, 255, 255 ]
              texture: "images/MarsV3-Shaded-2k.jpg"
    methods:
      spin: |
        this.rotateBy( [ 0, 0, 1, ( 1 / 1.88 ), 0 ] );
        this.future( 0.05 ).spin();
    scripts:
    - |
        this.initialize = function() {
          this.future( 0.05 ).spin();
        }     
  jupiter:
    extends: http://vwf.example.com/node3.vwf
    properties:
      rotation: [ 1, 0, 0, 90 ]
    children:
      planet:
        extends: http://vwf.example.com/threejs/sphere.vwf
        properties:
          meshDefinition: 
            radius: 11.1
            segmentsWidth: 32
            segmentsHeight: 32
          translation: [ 360, 0, 0 ]  
          scale: [ 5.5, 5.5, 5.5 ]
        children:
          material:
            extends: http://vwf.example.com/material.vwf
            properties:
              color: [ 255, 255, 255 ]
              texture: "images/realj2k.jpg"
    methods:
      spin: |
        this.rotateBy( [ 0, 0, 1, ( 1 / 11.86 ), 0 ] );
        this.future( 0.05 ).spin();
    scripts:
    - |
        this.initialize = function() {
          this.future( 0.05 ).spin();
        }  
  saturn:
    extends: http://vwf.example.com/node3.vwf
    properties:
      rotation: [ 1, 0, 0, 90 ]
    children:
      planet:
        extends: http://vwf.example.com/threejs/sphere.vwf
        properties:
          meshDefinition: 
            radius: 9.41
            segmentsWidth: 32
            segmentsHeight: 32
          translation: [ 600, 0, 0 ]  
          scale: [ 5.5, 5.5, 5.5 ]
        children:
          material:
            extends: http://vwf.example.com/material.vwf
            properties:
              color: [ 255, 255, 255 ]
              texture: "images/saturn_bjoernjonsson.jpg"
    methods:
      spin: |
        this.rotateBy( [ 0, 0, 1, ( 1 / 29.46 ), 0 ] );
        this.future( 0.05 ).spin();
    scripts:
    - |
        this.initialize = function() {
          this.future( 0.05 ).spin();
        } 
  uranus:
    extends: http://vwf.example.com/node3.vwf
    properties:
      rotation: [ 1, 0, 0, 90 ]
    children:
      planet:
        extends: http://vwf.example.com/threejs/sphere.vwf
        properties:
          meshDefinition: 
            radius: 4
            segmentsWidth: 32
            segmentsHeight: 32
          translation: [ 1080, 0, 0 ]  
          scale: [ 5.5, 5.5, 5.5 ]
        children:
          material:
            extends: http://vwf.example.com/material.vwf
            properties:
              color: [ 255, 255, 255 ]
              texture: "images/uranus.jpg"
    methods:
      spin: |
        this.rotateBy( [ 0, 0, 1, ( 1 / 84.01 ), 0 ] );
        this.future( 0.05 ).spin();
    scripts:
    - |
        this.initialize = function() {
          this.future( 0.05 ).spin();
        }
  neptune:
    extends: http://vwf.example.com/node3.vwf
    properties:
      rotation: [ 1, 0, 0, 90 ]
    children:
      planet:
        extends: http://vwf.example.com/threejs/sphere.vwf
        properties:
          meshDefinition: 
            radius: 3.88
            segmentsWidth: 32
            segmentsHeight: 32
          translation: [ 2040, 0, 0 ]  
          scale: [ 5.5, 5.5, 5.5 ]
        children:
          material:
            extends: http://vwf.example.com/material.vwf
            properties:
              color: [ 255, 255, 255 ]
              texture: "images/neptune.jpg"
    methods:
      spin: |
        this.rotateBy( [ 0, 0, 1, ( 1 / 164.8 ), 0 ] );
        this.future( 0.05 ).spin();
    scripts:
    - |
        this.initialize = function() {
          this.future( 0.05 ).spin();
        }
  pluto:
    extends: http://vwf.example.com/node3.vwf
    properties:
      rotation: [ 1, 0, 0, 90 ]
    children:
      planet:
        extends: http://vwf.example.com/threejs/sphere.vwf
        properties:
          meshDefinition: 
            radius: 1.801
            segmentsWidth: 32
            segmentsHeight: 32
          translation: [ 3960, 0, 0 ]  
          scale: [ 5.5, 5.5, 5.5 ]
        children:
          material:
            extends: http://vwf.example.com/material.vwf
            properties:
              color: [ 255, 255, 255 ]
              texture: "images/pluto.jpg"
    methods:
      spin: |
        this.rotateBy( [ 0, 0, 1, ( 1 / 247.7 ), 0 ] );
        this.future( 0.05 ).spin();
    scripts:
    - |
        this.initialize = function() {
          this.future( 0.05 ).spin();
        }

  stars:
    extends: http://vwf.example.com/node3.vwf
    properties:
      rotation: [ 1, 0, 0, 90 ]
    children:
      universe:
        extends: http://vwf.example.com/threejs/sphere.vwf
        properties:
          meshDefinition: 
            radius: 5000
            segmentsWidth: 256
            segmentsHeight: 256
          translation: [ 0, 0, 0 ]  
        children:
          material:
            #type: MeshBasicMaterial
            extends: http://vwf.example.com/material.vwf
            properties:
              #texture: "images/night-sky.jpeg"
              texture: images/field_of_stars_full.jpg
              side: back
              textureRepeat: [ 16, 16 ]
              textureWrapT: repeat
              textureWrapS: repeat
