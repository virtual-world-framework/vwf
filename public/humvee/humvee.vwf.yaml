# Copyright 2012 United States Government, as represented by the Secretary of Defense, Under
# Secretary of Defense (Personnel & Readiness).
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.

---
extends: http://vwf.example.com/node3.vwf
source: /humvee/humvee.DAE
type: model/vnd.collada+xml
implements: 
- /humvee/drive.vwf
properties:
  started: false
  enableDrive: false
  mode: "normal"
children:
  Omni001:
    extends: http://vwf.example.com/pointlight.vwf
    properties:
      intensity: 1.7
      distance: 1000
      position: [ 0, 0, 0 ]
  Omni002:
    extends: http://vwf.example.com/pointlight.vwf
    properties:
      intensity: 1.7
      distance: 1000
      position: [ 40, 0, 100 ]
  dir:
    extends: http://vwf.example.com/directionallight.vwf
    properties:
      intensity: 0.5
      distance: 1000
    scripts:
    - |
      this.initialize = function() {
        this.position = [ -0.7, -0.7, 0.3 ];
      }
  interiorCamera:
    extends: http://vwf.example.com/camera.vwf
    properties:
      worldTransform: [ 0.04541779309511185,0.9989691376686096,0,0,-0.9989691376686096,0.04541779309511185,0,0,0,0,1,0,-14.136186599731445,-42.1671028137207,88.4365005493164,1 ]
  ParkingBrake: 
    extends: http://vwf.example.com/node3.vwf 
    children: 
      brake:
        extends: http://vwf.example.com/node3.vwf
        source: /humvee/brake.DAE
        type: model/vnd.collada+xml
        properties:
          transform: [-0.34999996423721313, -0.00008858287037583068, 0.00008858287037583068, 0, 0.00008858287037583068, 1.1979989444910188e-8, 0.34999996423721313, 0, -0.00008858287037583068, 0.34999996423721313, 1.1979989444910188e-8, 0, 0.05000000074505806, 0.3400000035762787, 0, 1]
          braked:
            set: |
              switch(value) {
                case true:
                  this.braked = value;
                  this.Circle.material.color = "#ff0000";
                  this.Text.material.emit = "#ffffff";
                  break;
                case false:
                  this.braked = value;
                  this.Circle.material.color = "#550000";
                  this.Text.material.emit = "#555555";
                  break;
              }
            value: true
        children:
          Circle: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material:
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "#bb0000" 
          Text: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material:
                extends: http://vwf.example.com/material.vwf
                properties:
                  emit: 0.1
      Untitled_034: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
  WaitToStart: 
    extends: http://vwf.example.com/node3.vwf 
    children:               
      wait:
        extends: http://vwf.example.com/node3.vwf
        source: /humvee/wait.DAE
        type: model/vnd.collada+xml
        properties:
          transform: [-0.34999996423721313, -0.00006472349923569709, 0.00006472349923569709, 0, 0.00006472349195973948, 1.1979989444910188e-8, 0.3499999940395355, 0, -0.00006472349195973948, 0.3499999940395355, 1.1979989444910188e-8, 0, 0.05000000074505806, 0.33000001311302185, 0, 1]
          waiting:
            set: |
              switch(value) {
                case true:
                  this.waiting = value;
                  this.Circle.material.color = "#ff0000";
                  this.Text.material.emit = "#ffffff";
                  break;
                case false:
                  this.waiting = value;
                  this.Circle.material.color = "#550000";
                  this.Text.material.emit = "#555555";
                  break;
              }
            value: false
        children:
          Circle: 
            extends: http://vwf.example.com/node3.vwf 
            children:
              material:
                extends: http://vwf.example.com/material.vwf
                properties:
                  color: "#bb0000" 
          Text: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material:
                extends: http://vwf.example.com/material.vwf
                properties:
                  emit: 0.1
      Untitled_033: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material:
            extends: http://vwf.example.com/material.vwf
  AirFan: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 2
      animationRate: 2
    children: 
      Untitled_032: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
      gamma:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 2
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.translateBy([0, 0, -1 * time], 0);
      }
  GearShift: 
    extends: http://vwf.example.com/node3.vwf 
    implements:  
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 2
      controlValue: 0.25
      animationTime: 0.25
    children: 
      Untitled_031: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      rear:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
          controlType: detent
      neutral:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
          controlType: detent
      drive:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 2
          controlType: detent
      second:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 3
          controlType: detent
      first:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 4
          controlType: detent
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.translateBy([1 * (time - 0.5) * 8, 0, 0], 0);
      }
  HighLowSelector: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 3
      controlValue: 0.5
      animationTime: 0.5
    children: 
      Untitled_030: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      ll:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
          controlType: detent
      h:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
          controlType: detent
      hl:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 2
          controlType: detent
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.translateBy([1 * (time - 0.7) * 6, 0, 0], 0);
      }
  EmergencyBrake: 
    extends: http://vwf.example.com/node3.vwf 
    implements:  
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 0
    children: 
      Untitled_029: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      engage:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
      release:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
          animationTime: 1
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0, 1, 0, time * 45], 0, "rotated");
      }
      this.controlValueUpdated = this.events.add(function(controlValue) {
        if(this.controlValue == this.children.engage.controlValue) {
          this.parent.ParkingBrake.brake.braked = true;
        }
        else if(this.controlValue == this.children.release.controlValue) {
          this.parent.ParkingBrake.brake.braked = false;
        }
      }, this);
  Accelerator: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      animationRate: 3
      controlScale: 2
      controlMomentary: true
    children: 
      Untitled_028: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0, 1, 0, time * 10], 0, "rotated");
      }
  Brake: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      animationRate: 3
      controlScale: 2
      controlMomentary: true
    children: 
      Untitled_027: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0, 1, 0, time * 10], 0, "rotated");
      }
  SteeringWheel: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlValue: 1
      animationTime: 0.5
      linkedControls: ["TirePassFront", "TireDriverFront"]
    children: 
      Horn: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          Untitled_026: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf 
        methods: 
          honkHorn:
        scripts:
        - |
          this.pointerUp = function( pointerInfo, pickInfo ) {
            this.honkHorn();
          }
      Untitled_025: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
          controlValue: 1
          animationTime: 0.5
      gamma:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 2
          controlValue: 2
          animationTime: 1
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0.942, 0, 0.335, (time - 0.5) * -720], 0, "rotated");
      }
  TurnSignal: 
    extends: http://vwf.example.com/node3.vwf
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 3
      controlValue: 0.5
      animationTime: 0.5
    children: 
      Untitled_024: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      right:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
          controlType: detent
      none:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
          controlType: detent
      left:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 2
          controlType: detent
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0.942, 0, 0.335, (time - 0.5) * 60], 0, "rotated");
      }
  Ignition: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 3
    children: 
      Untitled_023: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      stop:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
      run:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
          controlType: "detent"
      start:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 2
          controlType: "spring"
    methods:
      finishWait: 
      startEngine:
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([-1, 0, 0, time * 70], 0, "rotated");
      }
      this.pointerDown = function() {
        this.initialControlValue$ = this.controlValue;
      }
      this.controlValueUpdated = this.events.add(function() {
        if(this.initialControlValue$ !== undefined) {
          if(this.initialControlValue$ < this.run.controlValue && this.controlValue == this.run.controlValue) {
            this.controlDisabled = true;
            this.parent.WaitToStart.wait.waiting = true;
            this.in(2).finishWait();
          }
          else if(this.initialControlValue$ == this.run.controlValue && this.controlValue > (this.start.controlValue - 0.1)) {
            this.parent.started = true;
            this.startEngine();
            
            // If engine started, set gauges to max position
            this.parent.VoltMeter.animateControlToPosition(this.parent.VoltMeter.gamma);
            this.parent.TempNeedle.animateControlToPosition(this.parent.TempNeedle.gamma);
            this.parent.OilNeedle.animateControlToPosition(this.parent.OilNeedle.delta);
            this.parent.FuelNeedle.animateControlToPosition(this.parent.FuelNeedle.epsilon);
          }
          else if(this.controlValue == 0) {
            // If engine stopped, reset gauges to controlValue zero
            this.parent.VoltMeter.animateControlToPosition(this.parent.VoltMeter.alpha);
            this.parent.TempNeedle.animateControlToPosition(this.parent.TempNeedle.alpha);
            this.parent.OilNeedle.animateControlToPosition(this.parent.OilNeedle.alpha);
            this.parent.FuelNeedle.animateControlToPosition(this.parent.FuelNeedle.alpha);
          }
        }
      }, this);
      this.finishWait = function() {
        this.controlDisabled = false;
        this.parent.WaitToStart.wait.waiting = false;
      }
  Switch03: 
    extends: http://vwf.example.com/node3.vwf 
    children: 
      Untitled_022: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
  Switch02: 
    extends: http://vwf.example.com/node3.vwf 
    children: 
      Untitled_021: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
  Switch01: 
    extends: http://vwf.example.com/node3.vwf 
    children: 
      Untitled_020: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
  AirTemp: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 3
      controlValue: 2
      animationTime: 0.5
    children: 
      Untitled_019: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 0
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 1
          sequence: 1
          animationTime: 0.25
      gamma:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 2
          sequence: 2
          animationTime: 0.5
      delta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 3
          sequence: 3
          animationTime: 0.75
      epsilon:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 4
          sequence: 4
          animationTime: 1
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.translateBy([0, 1 * (time - 0.5) * 2, 0], 0);
      }
  SpeedNeedle: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 3
    children: 
      Untitled_018: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 0
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 1
          sequence: 1
          animationTime: 0.25
      gamma:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 2
          sequence: 2
          animationTime: 0.5
      delta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 3
          sequence: 3
          animationTime: 0.75
      epsilon:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 4
          sequence: 4
          animationTime: 1
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0.986, 0, 0.164, time * -240], 0, "rotated");
      }
  VoltMeter: 
    extends: http://vwf.example.com/node3.vwf
    implements:
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 3
      controlValue: 0
      animationTime: 0
    children: 
      Untitled_017: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 0
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 1
          sequence: 1
          animationTime: 0.25
      gamma:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 2
          sequence: 2
          animationTime: 0.5
      delta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 3
          sequence: 3
          animationTime: 0.75
      epsilon:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 4
          sequence: 4
          animationTime: 1
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0.986, 0, 0.164, (time - 0.5) * -72], 0, "rotated");
      }
  TempNeedle: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 3
      controlValue: 0
      animationTime: 0
    children: 
      Untitled_016: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 0
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 1
          sequence: 1
          animationTime: 0.25
      gamma:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 2
          sequence: 2
          animationTime: 0.5
      delta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 3
          sequence: 3
          animationTime: 0.75
      epsilon:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 4
          sequence: 4
          animationTime: 1
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0.986, 0, 0.164, (time - 0.5) * -72], 0, "rotated");
      }
  OilNeedle: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 3
      controlValue: 0
      animationTime: 0
    children: 
      Untitled_015: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 0
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 1
          sequence: 1
          animationTime: 0.25
      gamma:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 2
          sequence: 2
          animationTime: 0.55
      delta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 3
          sequence: 3
          animationTime: 0.8
      epsilon:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 4
          sequence: 4
          animationTime: 1
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0.986, 0, 0.164, (time - 0.55) * -90], 0, "rotated");
      }
  FuelNeedle: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 3
      controlValue: 0
      animationTime: 0
    children: 
      Untitled_014: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 0
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 1
          sequence: 1
          animationTime: 0.25
      gamma:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 2
          sequence: 2
          animationTime: 0.5
      delta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 3
          sequence: 3
          animationTime: 0.75
      epsilon:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 4
          sequence: 4
          animationTime: 1
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0.986, 0, 0.164, (time - 0.5) * -80], 0, "rotated");
      }
  DoorPassFront: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 2
    children: 
      Untitled_013: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
          animationTime: 0.125
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0, 0, 1, time * 360], 0, "rotated");
      }
  DoorPassRear: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 2
    children: 
      Untitled_012: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
          animationTime: 0.125
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0, 0, 1, time * 360], 0, "rotated");
      } 
  WiperPass: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      animationTime: 0
      controlValue: 0
      controlScale: 2
      linkedControls: ["WiperDriver"]
    children: 
      Untitled_011: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf  
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 0
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 1
          sequence: 1
          animationTime: 0.125
      gamma:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 2
          sequence: 2
          animationTime: 0.25
      delta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 3
          sequence: 3
          animationTime: 0.375
      epsilon:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 4
          sequence: 4
          animationTime: 0.5
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([-1, 0, 0, (time - 0.125) * 360], 0, "rotated");
      }
  WiperDriver: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      animationTime: 0
      controlValue: 0
      controlScale: 2
      linkedControls: ["WiperPass"]
    children: 
      Untitled_010: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 0
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 1
          sequence: 1
          animationTime: 0.125
      gamma:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 2
          sequence: 2
          animationTime: 0.25
      delta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 3
          sequence: 3
          animationTime: 0.375
      epsilon:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 4
          sequence: 4
          animationTime: 0.5
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([-1, 0, 0, (time - 0.125) * 360], 0, "rotated");
      }
  GunMount: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 2
    children: 
      GunMountHatch01: 
        extends: http://vwf.example.com/node3.vwf 
        implements: 
        - http://vwf.example.com/control.vwf
        properties:
          controlScale: 2
        children: 
          GunMountHatch02: 
            extends: http://vwf.example.com/node3.vwf 
            implements: 
            - http://vwf.example.com/control.vwf
            properties:
              controlScale: 2
            children: 
              Untitled_009: 
                extends: http://vwf.example.com/node3.vwf 
                children: 
                  material: 
                    extends: http://vwf.example.com/material.vwf 
              alpha:
                implements:
                - http://vwf.example.com/animation/position.vwf
                - http://vwf.example.com/control/position.vwf
                properties:
                  sequence: 0
              beta:
                implements:
                - http://vwf.example.com/animation/position.vwf
                - http://vwf.example.com/control/position.vwf
                properties:
                  sequence: 1
                  animationTime: 0.161
              gamma:
                implements:
                - http://vwf.example.com/animation/position.vwf
                - http://vwf.example.com/control/position.vwf
                properties:
                  sequence: 2
                  animationTime: 0.322
              delta:
                implements:
                - http://vwf.example.com/animation/position.vwf
                - http://vwf.example.com/control/position.vwf
                properties:
                  sequence: 3
                  animationTime: 0.483
            scripts:
            - |
              this.animationUpdate = function(time, duration) {
                if(!this.initialTransform) {
                  this.initialTransform = this.transform;
                }
                this.transform = this.initialTransform;
                this.rotateBy([0, 1, 0, time * 360], 0, "rotated");
              }
          Untitled_008: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf 
          alpha:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 0
          beta:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 1
              animationTime: 0.167
          gamma:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 2
              animationTime: 0.333
          delta:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 3
              animationTime: 0.5
        scripts:
        - |
          this.animationUpdate = function(time, duration) {
            if(!this.initialTransform) {
              this.initialTransform = this.transform;
            }
            this.transform = this.initialTransform; 
            this.rotateBy([1, 0, 0, time * 360], 0, "rotated");
          }
      Untitled_007: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
      gamma:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 2
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0, 0, 1, time * 360], 0, "rotated");
      }
  DoorDriverFront: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 2
    children: 
      Untitled_006: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      close:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
      open:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
          animationTime: 0.125
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0, 0, -1, time * 360], 0, "rotated");
        //@ sourceURL=humvee.DoorDriverFront.animationUpdate
      }
  RearHatch: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 2
    children: 
      Untitled_005: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
          animationTime: 0.125
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0, -1, 0, time * 360], 0, "rotated");
      }
  SpareMount: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 2
    children: 
      SpareTire: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      Untitled_004: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
          animationTime: 0.125
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0, 0, 1, time * 360], 0, "rotated");
      }
  DoorDriverRear: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 2
    children: 
      Untitled_003: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
          animationTime: 0.125
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0, 0, -1, time * 360], 0, "rotated");
      }
  TireDriverRear: 
    extends: http://vwf.example.com/node3.vwf 
    children: 
      material: 
        extends: http://vwf.example.com/material.vwf 
  TirePassRear: 
    extends: http://vwf.example.com/node3.vwf 
    children: 
      material: 
        extends: http://vwf.example.com/material.vwf 
  TirePassFront: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 3
      animationRate: 1.5
      controlValue: 1
      animationTime: 0.5
      linkedControls: ["SteeringWheel", "TireDriverFront"]
    children: 
      material: 
        extends: http://vwf.example.com/material.vwf
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 0
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 1
          sequence: 1
          animationTime: 0.5
      gamma:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 2
          sequence: 2
          animationTime: 1
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0, 0, 1, (time - 0.5) * 60], 0, "rotated");
      }
  TireDriverFront: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 3
      animationRate: 1.5
      controlValue: 1
      animationTime: 0.5
      linkedControls: ["SteeringWheel", "TirePassFront"]
    children: 
      material: 
        extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 0
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 1
          sequence: 1
          animationTime: 0.5
      gamma:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          controlValue: 2
          sequence: 2
          animationTime: 1
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0, 0, 1, (time - 0.5) * 60], 0, "rotated");
      }
  HumveeBody: 
    extends: http://vwf.example.com/node3.vwf 
    children: 
      material: 
        extends: http://vwf.example.com/material.vwf 
  HoodLatchPass: 
    extends: http://vwf.example.com/node3.vwf
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 2
      linkedControls: ["Hood", "HoodLatchDriver"]
    children: 
      Untitled_002: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
          animationTime: 0.125
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([-1, 0, 0, time * 360], 0, "rotated");
      }
  HoodLatchDriver: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 2
      linkedControls: ["HoodLatchPass", "Hood"]
    children: 
      Untitled_001: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
          animationTime: 0.125
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([1, 0, 0, time * 360], 0, "rotated");
      }
  Hood: 
    extends: http://vwf.example.com/node3.vwf 
    implements: 
    - http://vwf.example.com/control.vwf
    properties:
      controlScale: 2
      linkedControls: ["HoodLatchPass", "HoodLatchDriver"]
    children: 
      Untitled: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      alpha:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 0
      beta:
        implements:
        - http://vwf.example.com/animation/position.vwf
        - http://vwf.example.com/control/position.vwf
        properties:
          sequence: 1
          animationTime: 0.125
    scripts:
    - |
      this.animationUpdate = function(time, duration) {
        if(!this.initialTransform) {
          this.initialTransform = this.transform;
        }
        this.transform = this.initialTransform;
        this.rotateBy([0, -1, 0, time * 360], 0, "rotated");
      }
  Ground: 
    extends: http://vwf.example.com/node3.vwf 
    children: 
      material: 
        extends: http://vwf.example.com/material.vwf 