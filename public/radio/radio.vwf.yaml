# Copyright 2012 United States Government, as represented by the Secretary of Defense, Under
# Secretary of Defense (Personnel & Readiness).
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.

--- 
extends: http://vwf.example.com/node3.vwf
source: /radio/radio.DAE
type: model/vnd.collada+xml
properties:
  translation: [ 0, 0, 0 ]
  rotation: [ 1, 0, 0, -90 ]
  channelImages:
  backlightImages: 
  beepImages: 
  squelchImages: 
  encryptImages: 
  powerImages: 
  animationPlaying: false
  animationDuration: 26.6
  powerOn:
    set: |
      if ( this.powerOn != Boolean( value ) ){
        this.powerOn = Boolean( value );
        if ( value ) {
          this.volume = 10;
          this.menuMode = "channel";
        } else {
          this.volume = 0;
          this.Radio.LCD.material.texture = "/radio/images/lcd.png";
        } 
      } //@ sourceURL=radio.vwf.property.powerOn
    value: false
  volume:
    set: |
      if ( value >= 0 && value <= 10 ){
        if ( this.volume == 0 && value != 0 ) {
          this.powerOn = true;
        } else if ( this.volume != 0 && value == 0 ) {
          this.powerOn = false;
        }
        this.volume = value;
      } //@ sourceURL=radio.vwf.property.volume
    value: 0
  speak: "up"
  channel:
    set: |
      if ( !this.powerOn ) return;
      switch( value ) {
        case 0:
          this.Radio.LCD.material.texture = this.channelImages[0];
          this.channel = value;
          break;
        case 1:
          this.Radio.LCD.material.texture = this.channelImages[1];
          this.channel = value;
          break;
        case 2:
          this.Radio.LCD.material.texture = this.channelImages[2];
          this.channel = value;
          break;
        case 3:
          this.Radio.LCD.material.texture = this.channelImages[3];
          this.channel = value;
          break;
        case 4:
          this.Radio.LCD.material.texture = this.channelImages[4];
          this.channel = value;
          break;
        case 5:
          this.Radio.LCD.material.texture = this.channelImages[5];
          this.channel = value;
          break;
        case 6:
          this.Radio.LCD.material.texture = this.channelImages[6];
          this.channel = value;
          break;
        case 7:
          this.Radio.LCD.material.texture = this.channelImages[7];
          this.channel = value;
          break;
        case 8:
          this.Radio.LCD.material.texture = this.channelImages[8];
          this.channel = value;
          break;
        case 9:
          this.Radio.LCD.material.texture = this.channelImages[9];
          this.channel = value;
          break;
        case 10:
          this.Radio.LCD.material.texture = this.channelImages[10];
          this.channel = value;
          break;
        case 11:
          this.Radio.LCD.material.texture = this.channelImages[11];
          this.channel = value;
          break;
        case 12:
          this.Radio.LCD.material.texture = this.channelImages[12];
          this.channel = value;
          break;
        case 13:
          this.Radio.LCD.material.texture = this.channelImages[13];
          this.channel = value;
          break;
        case 14:
          this.Radio.LCD.material.texture = this.channelImages[14];
          this.channel = value;
          break;
        case 15:
          this.Radio.LCD.material.texture = this.channelImages[15];
          this.channel = value;
          break;
      } //@ sourceURL=radio.vwf.property.channel
    value: 0
  headphones: false
  antenna:
    set: |
      if ( value ) {
        this.Radio.animationPlaying = !value;
      } else {
        this.logger.debug( "replace the antenna" );
      }
      this.antenna = value;
    value: true
  battery: true
  batteryCover: true 
  beltClip: true
  menuMode:
    set: |
      if ( !this.powerOn ) return;
      switch( value ) {
        case "channel":
          this.channel = this.channel;
          this.menuMode = value;
          break;
        case "backLight":
          this.backLightMode = this.backLightMode;
          this.menuMode = value;
          break;
        case "squelch":
          this.squelch = this.squelch;
          this.menuMode = value;
          break;
        case "beep":
          this.beepOn = this.beepOn;
          this.menuMode = value;
          break;
      } //@ sourceURL=radio.vwf.property.menuMode
    value: "none"
  backLightMode:
    set: |
      if ( !this.powerOn ) return;
      switch(value) {
        case "auto":
          this.Radio.LCD.material.texture = this.backlightImages[0];
          this.backLightMode = value;
          break;
        case "off":
          this.Radio.LCD.material.texture = this.backlightImages[1];
          this.backLightMode = value;
          break;
        case "on":
          this.Radio.LCD.material.texture = this.backlightImages[2];
          this.backLightMode = value;
          break;
      } //@ sourceURL=radio.vwf.property.backLightMode
    value: "auto"
  beepOn:
    set: |
      if ( !this.powerOn ) return;
      if ( value ) {
          this.Radio.LCD.material.texture = this.beepImages[0];
          this.beepOn = value;
      } else {
          this.Radio.LCD.material.texture = this.beepImages[1];
          this.beepOn = value;
      } //@ sourceURL=radio.vwf.property.beepOn
    value: true
  squelch:
    set: |
      if ( !this.powerOn ) return;
      switch(value) {
        case 20:
          this.Radio.LCD.material.texture = this.squelchImages[0];
          this.squelch = value;
          break;
        case 30:
          this.Radio.LCD.material.texture = this.squelchImages[1];
          this.squelch = value;
          break;
        case 40:
          this.Radio.LCD.material.texture = this.squelchImages[2];
          this.squelch = value;
          break;
        case 50:
          this.Radio.LCD.material.texture = this.squelchImages[3];
          this.squelch = value;
          break;
        case 60:
          this.Radio.LCD.material.texture = this.squelchImages[4];
          this.squelch = value;
          break;
        case 70:
          this.Radio.LCD.material.texture = this.squelchImages[5];
          this.squelch = value;
          break;
        case 80:
          this.Radio.LCD.material.texture = this.squelchImages[6];
          this.squelch = value;
          break;
        case 90:
          this.Radio.LCD.material.texture = this.squelchImages[7];
          this.squelch = value;
          break;
        case 100:
          this.Radio.LCD.material.texture = this.squelchImages[8];
          this.squelch = value;
          break;
        case 110:
          this.Radio.LCD.material.texture = this.squelchImages[9];
          this.squelch = value;
          break;
      } //@ sourceURL=radio.vwf.property.squelch
    value: 20
  encryptionOn:
    set: |
      if ( !this.powerOn ) return;
      if ( value ) {
        this.Radio.LCD.material.texture = this.encryptImages[0];
          this.encryptionOn = value;
      } else { 
        this.Radio.LCD.material.texture = this.encryptImages[1];
          this.encryptionOn = value;
      } 
      this.encryptionOn = value;
      //@ sourceURL=radio.vwf.property.encryptionOn
    value: false
  transmitPower:
    set: |
      if ( !this.powerOn ) return;
      switch ( value ){
        case 4:
          this.Radio.LCD.material.texture = this.powerImages[0];
          this.transmitPower = value;
          break;
        case 2:
          this.Radio.LCD.material.texture = this.powerImages[1];
          this.transmitPower = value;
          break;
        case 1:
          this.Radio.LCD.material.texture = this.powerImages[2];
          this.transmitPower = value;
          break;
      } //@ sourceURL=radio.vwf.property.transmitPower
    value: 4
  keysLocked: false
children: 
  Radio: 
    extends: http://vwf.example.com/node3.vwf 
    properties: 
      animationTime: 0
      animationPlaying: false
      animationDuration: 26.6
    children: 
      ic40_MicrophonePort: 
        extends: http://vwf.example.com/node3.vwf 
      ic40_SpeakerPort: 
        extends: http://vwf.example.com/node3.vwf 
      ic40Channel: 
        extends: http://vwf.example.com/node3.vwf 
        implements:  
        - http://vwf.example.com/control.vwf
        properties:
          controlDirection: -1
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
          channel0:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 0
              controlType: detent
          channel1:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 1
              controlType: detent
          channel2:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 2
              controlType: detent
          channel3:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 3
              controlType: detent
          channel4:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 4
              controlType: detent
          channel5:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 5
              controlType: detent
          channel6:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 6
              controlType: detent
          channel7:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 7
              controlType: detent
          channel8:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 8
              controlType: detent
          channel9:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 9
              controlType: detent
          channel10:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 10
              controlType: detent
          channel11:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 11
              controlType: detent
          channel12:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 12
              controlType: detent
          channel13:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 13
              controlType: detent
          channel14:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 14
              controlType: detent
          channel15:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 15
              controlType: detent
        scripts:
        - |
          this.animationUpdate = function(time, duration) {
            if(!this.initialTransform) {
              this.initialTransform = this.transform.internal_val;
            }
            this.transform = this.initialTransform;
            this.rotateBy([0, 1, 0, (time * 300)], 0, "rotated");
            // Update channel
            this.parent.parent.channel = time * 15;
          }
      ic40Down: 
        extends: http://vwf.example.com/node3.vwf 
        implements: 
        - http://vwf.example.com/control.vwf
        properties:
          animationRate: 10
          controlMomentary: true
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
          unpressed:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 0
          pressed:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 1
        scripts:
        - |
          this.animationUpdate = function(time, duration) {
            if(!this.initialTransform) {
              this.initialTransform = this.transform.internal_val;
            }
            this.transform = this.initialTransform;
            this.translateBy([0.04 * time, 0, 0], 0);
          }
          this.pointerUp = function() {
            this.parent.parent.down();
          }
      ic40Monitor: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      ic40P0: 
        extends: http://vwf.example.com/node3.vwf 
        implements: 
        - http://vwf.example.com/control.vwf
        properties:
          animationRate: 10
          controlMomentary: true
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
          unpressed:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 0
          pressed:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 1
        scripts:
        - |
          this.animationUpdate = function(time, duration) {
            if(!this.initialTransform) {
              this.initialTransform = this.transform.internal_val;
            }
            this.transform = this.initialTransform;
            this.translateBy([0, 0, 0.03 * time], 0);
          } 
          this.pointerUp = function() {
            this.parent.parent.p0();
          }
      ic40P1: 
        extends: http://vwf.example.com/node3.vwf 
        implements: 
        - http://vwf.example.com/control.vwf
        properties:
          animationRate: 10
          controlMomentary: true
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
          unpressed:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 0
          pressed:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 1
        scripts:
        - |
          this.animationUpdate = function(time, duration) {
            if(!this.initialTransform) {
              this.initialTransform = this.transform.internal_val;
            }
            this.transform = this.initialTransform;
            this.translateBy([0, 0, 0.03 * time], 0);
          }
          this.pointerUp = function() {
            this.parent.parent.p1();
          }
      ic40P2: 
        extends: http://vwf.example.com/node3.vwf 
        implements: 
        - http://vwf.example.com/control.vwf
        properties:
          animationRate: 10
          controlMomentary: true
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
          unpressed:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 0
          pressed:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 1
        scripts:
        - |
          this.animationUpdate = function(time, duration) {
            if(!this.initialTransform) {
              this.initialTransform = this.transform.internal_val;
            }
            this.transform = this.initialTransform;
            this.translateBy([0, 0, 0.03 * time], 0);
          } 
          this.pointerUp = function() {
            this.parent.parent.p2();
          }
      ic40P3: 
        extends: http://vwf.example.com/node3.vwf 
        implements: 
        - http://vwf.example.com/control.vwf
        properties:
          animationRate: 10
          controlMomentary: true
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
          unpressed:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 0
          pressed:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 1
        scripts:
        - |
          this.animationUpdate = function(time, duration) {
            if(!this.initialTransform) {
              this.initialTransform = this.transform.internal_val;
            }
            this.transform = this.initialTransform;
            this.translateBy([0, 0, 0.03 * time], 0);
          } 
          this.pointerUp = function() {
            this.parent.parent.p3();
          }
      ic40PTT: 
        extends: http://vwf.example.com/node3.vwf 
        implements: 
        - http://vwf.example.com/control.vwf
        properties:
          animationRate: 10
          controlMomentary: true
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
          unpressed:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 0
          pressed:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 1
        scripts:
        - |
          this.animationUpdate = function(time, duration) {
            if(!this.initialTransform) {
              this.initialTransform = this.transform.internal_val;
            }
            this.transform = this.initialTransform;
            this.translateBy([0.04 * time, 0, 0], 0);
          } 
          this.pointerUp = function() {
            this.parent.parent.ptt();
          }
      ic40Red: 
        extends: http://vwf.example.com/node3.vwf 
        implements: 
        - http://vwf.example.com/control.vwf
        properties:
          animationRate: 10
          controlMomentary: true
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
          unpressed:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 0
          pressed:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 1
        scripts:
        - |
          this.animationUpdate = function(time, duration) {
            if(!this.initialTransform) {
              this.initialTransform = this.transform.internal_val;
            }
            this.transform = this.initialTransform;
            this.translateBy([0, 0.02 * time, 0], 0);
          } 
          this.pointerUp = function() {
            this.parent.parent.red();
          }
      ic40Up: 
        extends: http://vwf.example.com/node3.vwf 
        implements: 
        - http://vwf.example.com/control.vwf
        properties:
          animationRate: 10
          controlMomentary: true
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
          unpressed:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 0
          pressed:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 1
        scripts:
        - |
          this.animationUpdate = function(time, duration) {
            if(!this.initialTransform) {
              this.initialTransform = this.transform.internal_val;
            }
            this.transform = this.initialTransform;
            this.translateBy([0.04 * time, 0, 0], 0);
          }
          this.pointerUp = function() {
            this.parent.parent.up();
          }
      ic40Volume: 
        extends: http://vwf.example.com/node3.vwf 
        implements: 
        - http://vwf.example.com/control.vwf
        properties:
          controlDirection: -1
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
          volume0:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 0
          volume1:
            implements:
            - http://vwf.example.com/animation/position.vwf
            - http://vwf.example.com/control/position.vwf
            properties:
              sequence: 1
        methods:
          playStatic:
          stopStatic:
        scripts:  
        - | 
          this.animationUpdate = function(time, duration) {
            if(!this.initialTransform) {
              this.initialTransform = this.transform.internal_val;
            }
            this.transform = this.initialTransform;
            this.rotateBy([0, 1, 0, (time * 300)], 0, "rotated");
            if(time > 0.001)
            {
              this.parent.parent.volume = 1;
              this.playStatic(time);
            }
            else
            {
              this.parent.parent.volume = 0;
              this.stopStatic();
            }
          }
      LCD: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
            properties:
              texture: 
      LCD_Back: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          material: 
            extends: http://vwf.example.com/material.vwf 
      BeltClip_1: 
        extends: http://vwf.example.com/node3.vwf 
        properties: 
          animationPlaying: false
          animationDuration: 26.6
        scripts:
        - |
            this.pointerUp = function() {
              this.animationPlaying = !this.animationPlaying 
            }    
        children: 
          BeltClip: 
            extends: http://vwf.example.com/node3.vwf 
          BeltClipBase: 
            extends: http://vwf.example.com/node3.vwf 
          BeltClip_Latch: 
            extends: http://vwf.example.com/node3.vwf 
            properties: 
              animationPlaying: false
              animationDuration: 26.6
            scripts:
            - |
                this.pointerUp = function() {
                  this.animationPlaying = !this.animationPlaying 
                }   
            children: 
              BeltClipTab: 
                extends: http://vwf.example.com/node3.vwf 
      Battery: 
        extends: http://vwf.example.com/node3.vwf 
        properties: 
          animationPlaying: false
          animationDuration: 26.6 
        scripts:
        - |
            this.pointerUp = function() {
              this.animationPlaying = !this.animationPlaying 
            }  
        children: 
          ic40Battery: 
            extends: http://vwf.example.com/node3.vwf 
      BatteryLatch: 
        extends: http://vwf.example.com/node3.vwf 
        properties: 
          animationPlaying: false
          animationDuration: 26.6
        scripts:
        - |
            this.pointerUp = function() {
              this.animationPlaying = !this.animationPlaying 
            }          
        children: 
          ic40BatteryLatch: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              material: 
                extends: http://vwf.example.com/material.vwf 
      ic40Radio: 
        extends: http://vwf.example.com/node3.vwf 
  ic40Antennae: 
    extends: http://vwf.example.com/node3.vwf 
    scripts:
    - |
        this.ic40Antennae = function() {
          this.parent.parent.antenna = !this.parent.parent.antenna; 
        }         
    children: 
      material: 
        extends: http://vwf.example.com/material.vwf 
scripts: 
- |
    var radio = this;
    this.initialize = function() {
      this.channelImages = ["/radio/images/LCD12_Chan1_Gon_Von.png", "/radio/images/LCD12_Chan2_Gon_Von.png", "/radio/images/LCD12_Chan3_Gon_Von.png",
        "/radio/images/LCD12_Chan4_Gon_Von.png", "/radio/images/LCD12_Chan5_Gon_Von.png", "/radio/images/LCD12_Chan6_Gon_Von.png",
        "/radio/images/LCD12_Chan7_Gon_Von.png", "/radio/images/LCD12_Chan8_Gon_Von.png", "/radio/images/LCD12_Chan9_Gon_Von.png",
        "/radio/images/LCD12_Chan10_Gon_Von.png", "/radio/images/LCD12_Chan11_Gon_Von.png", "/radio/images/LCD12_Chan12_Gon_Von.png",
        "/radio/images/LCD12_Chan13_Gon_Von.png", "/radio/images/LCD12_Chan14_Gon_Von.png", "/radio/images/LCD12_Chan15_Gon_Von.png",
        "/radio/images/LCD12_Chan16_Gon_Von.png"];
      this.backlightImages = ["/radio/images/LCD12_LIGT_AUTO_Gon_Von.png", "/radio/images/LCD12_LIGT_ON_Gon_Von.png", "/radio/images/LCD12_LIGT_OFF_Gon_Von.png"];
      this.beepImages = ["/radio/images/LCD12_BEEP_ON_Gon_Von.png", "/radio/images/LCD12_BEEP_OFF_Gon_Von.png"];
      this.squelchImages = ["/radio/images/LCD12_SQL20_Gon_Von.png", "/radio/images/LCD12_SQL30_Gon_Von.png", "/radio/images/LCD12_SQL40_Gon_Von.png",
        "/radio/images/LCD12_SQL50_Gon_Von.png", "/radio/images/LCD12_SQL60_Gon_Von.png", "/radio/images/LCD12_SQL70_Gon_Von.png", 
        "/radio/images/LCD12_SQL80_Gon_Von.png", "/radio/images/LCD12_SQL90_Gon_Von.png", "/radio/images/LCD12_SQL100_Gon_Von.png", 
        "/radio/images/LCD12_SQL110_Gon_Von.png"];
      this.encryptImages = ["/radio/images/LCD7_Scrambler_Gon_Von.png", "/radio/images/LCD7_Scrambler_Gon_Voff.png"];
      this.powerImages = ["/radio/images/LCD12_Blank_Gon_Voff.png", "/radio/images/LCD12_Low2_Gon_Von.png", "/radio/images/LCD12_Low1_Gon_Von.png"];
      this.preloadImages();
    }
    this.preloadImages = function() {
      var i;
      for(i = 0; i < this.channelImages.length; i++) {
        new Image().src = this.channelImages[i];
      }
      for(i = 0; i < this.beepImages.length; i++) {
        new Image().src = this.beepImages[i];
      }
      for(i = 0; i < this.squelchImages.length; i++) {
        new Image().src = this.squelchImages[i];
      }
      for(i = 0; i < this.encryptImages.length; i++) {
        new Image().src = this.encryptImages[i];
      }
      for(i = 0; i < this.powerImages.length; i++) {
        new Image().src = this.powerImages[i];
      }
    }
    this.red = function() {
      if ( radio.keysLocked ) return;
      switch( radio.menuMode ) {
        case 'channel':
          radio.menuMode = 'backLight';
          break;
        case 'backLight':
          radio.menuMode = 'squelch';
          break;
        case 'squelch':
          radio.menuMode = "beep";
          break;
        case 'beep':
          radio.menuMode = 'channel';
          break;
      }
    }
    this.up = function() {
      switch( radio.menuMode ) {
        case "backLight":
          if ( radio.backLightMode == "on" )
            radio.backLightMode = "auto";
          else if ( radio.backLightMode == "auto")
            radio.backLightMode = "off";
          else
            radio.backLightMode = "on";
          break;
        case "squelch":
          if ( radio.squelch <= 100 )
            radio.squelch = radio.squelch + 10;
          if (radio.squelch >= 70) 
            radio.Radio.ic40Volume.stopStatic();
          break;
        case "beep":
          radio.beepOn = !radio.beepOn;
          break;
        case "channel":
          if (radio.channel < 15) {
            radio.channel += 1; 
          }
          break;
      }
    }
    this.down = function() {
      switch( radio.menuMode ) {
        case "backLight":
          if ( radio.backLightMode == "on" )
            radio.backLightMode = "auto";
          else 
            radio.backLightMode = "on";
          break;
        case "squelch":
          if ( radio.squelch >= 30 )
            radio.squelch = radio.squelch - 10;
          if (radio.squelch == 60)
            radio.Radio.ic40Volume.playStatic(1);
          break;
        case "beep":
          radio.beepOn = !radio.beepOn;
          break;
        case "channel":
          if (radio.channel > 0) {
            radio.channel -= 1; 
          }
          break;
      }
    }
    this.p0 = function() {
      if ( radio.keysLocked ) return;
      switch( radio.menuMode ){
        case "channel":
          radio.encryptionOn = !radio.encryptionOn;
          break;
      }
    }
    this.p1 = function() {
      if ( radio.keysLocked ) return;
    }
    this.p2 = function() {
      if ( radio.keysLocked ) return;
      if ( radio.menuMode == "channel" ){
        if ( !radio.settingTransmitPower ){
          radio.settingTransmitPower = true;
        } else {
          switch ( radio.transmitPower ){
            case 4:
              radio.transmitPower = 2;
              break;
            case 2:
              radio.transmitPower = 1;
              break;
            case 1:
              radio.transmitPower = 4;
              break;
          }
        }
      }
    }
    this.p3 = function() {
      radio.keysLocked = !radio.keysLocked;
    }
    this.ptt = function() {
      if ( radio.keysLocked ) return;
    } //@ sourceURL=radio.vwf