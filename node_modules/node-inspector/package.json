{
  "name": "node-inspector",
  "version": "0.2.0beta3",
  "description": "Web Inspector based nodeJS debugger",
  "homepage": "http://github.com/dannycoates/node-inspector",
  "author": {
    "name": "Danny Coates",
    "email": "dannycoates@gmail.com"
  },
  "keywords": [
    "debug",
    "debugger",
    "inspector",
    "profiler"
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/dannycoates/node-inspector.git"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "bin": {
    "node-inspector": "./bin/inspector.js"
  },
  "dependencies": {
    "socket.io": "~0.9",
    "connect": "~1.8.5",
    "async": "~0.1"
  },
  "preferGlobal": true,
  "readme": "Node Inspector is a debugger interface for nodeJS using the WebKit Web Inspector.\n\n## Getting Started\n\n### Requirements\n\n* [nodeJS](http://github.com/ry/node)\n  - versions: 0.3.0 or later\n* [npm](http://github.com/isaacs/npm)\n* A WebKit based browser: Chrome, Safari, etc.\n\n* Optional [v8-profiler](http://github.com/dannycoates/v8-profiler) to use the profiles panel\n\n### Install\n\n* With [npm](http://github.com/isaacs/npm)\n\n        $ npm install -g node-inspector\n\n### Enable debug mode\n\nTo use node-inspector, enable debugging on the node you wish to debug.\nYou can either start node with a debug flag like:\n\n    $ node --debug your/node/program.js\n\nor, to pause your script on the first line:\n\n    $ node --debug-brk your/short/node/script.js\n\nOr you can enable debugging on a node that is already running by sending\nit a signal:\n\n1. Get the PID of the node process using your favorite method. `pgrep` or `ps -ef` are good\n\n\t\t$ pgrep -l node\n\t\t2345 node your/node/server.js\n\n2. Send it the USR1 signal\n\n\t\t$ kill -s USR1 2345\n\nGreat! Now you are ready to attach node-inspector\n\n### Debugging\n\n1. start the inspector. I usually put it in the background\n\n\t\t$ node-inspector &\n\n2. open http://127.0.0.1:8080/debug?port=5858 in your favorite WebKit based browser\n\n3. you should now see the javascript source from node. If you don't, click the scripts tab.\n\n4. select a script and set some breakpoints (far left line numbers)\n\n5. then watch the [screencasts](http://www.youtube.com/view_play_list?p=A5216AC29A41EFA8)\n\nFor more information on getting started see the [wiki](http://github.com/dannycoates/node-inspector/wiki/Getting-Started---from-scratch)\n\nnode-inspector works almost exactly like the web inspector in Safari and\nChrome. Here's a good [overview](http://code.google.com/chrome/devtools/docs/scripts.html) of the UI\n\n## FAQ / WTF\n\n1. I don't see one of my script files in the file list.\n\n    > try refreshing the browser (F5 or command-r)\n\n2. My script runs too fast to attach the debugger.\n\n    > use `--debug-brk` to pause the script on the first line\n\n3. I got the ui in a weird state.\n\n    > when in doubt, refresh\n    \n4. Can I debug remotely?\n\n    > Yes. node-inspector must be running on the same machine, but your browser can be anywhere. Just make sure port 8080 is accessible\n\n## Inspector options\n\n    --web-port=[port]     port to host the inspector (default 8080)\n\n## Cool stuff\n\n* the WebKit Web Inspector debugger is a great js debugger interface, it works just as well for node\n* uses WebSockets, so no polling for breaks\n* remote debugging\n* javascript top to bottom :)\n* [edit running code](http://github.com/dannycoates/node-inspector/wiki/LiveEdit)\n\n## Known Issues\n\nThis is beta quality code, so use at your own risk:\n\n* be careful about viewing the contents of Buffer objects, each byte is displayed as an individual array element, for anything but tiny Buffers this will take too long to render\n* while not stopped at a breakpoint the console doesn't always behave as you might expect\n\n## Profiling\n\n**VERY EXPERIMENTAL**\nI don't recommend using this yet\n\nTo use the profiles panel, install the v8-profiler module:\n\n    npm install v8-profiler\n\nTo use it do something like:\n\n```javascript\nvar profiler = require('v8-profiler');\n\nprofiler.startProfiling('startup');\nslowStartupFoo();\nprofiler.stopProfiling('startup');\n\nprofiler.takeSnapshot('beforeLeak');\nleakyFoo();\nprofiler.takeSnapshot('afterLeak');\n```\n\nThen view the profiling results with the profiles panel in node-inspector. You can\nalso take heap snapshots on demand from the profiles panel.\n\n## Thanks\n\nThis project respectfully uses code from and thanks the authors of:\n\n* [WebKit](http://webkit.org/building/checkout.html)\n* [node](http://github.com/ry/node)\n* [socket.io](http://github.com/LearnBoost/socket.io)\n* [node-paperboy](http://github.com/felixge/node-paperboy)\n\n\n",
  "readmeFilename": "readme.md",
  "_id": "node-inspector@0.2.0beta3",
  "_from": "node-inspector@"
}
